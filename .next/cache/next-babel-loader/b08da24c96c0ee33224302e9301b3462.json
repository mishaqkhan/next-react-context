{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahnawaz\\\\Desktop\\\\nextjs\\\\next-env-git\\\\components\\\\user\\\\UserAvatar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { UserContext } from \"../contexts/user-context\";\n\nfunction UserAvatar() {\n  return __jsx(UserContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, function (stateData) {\n    var username = stateData.state.username;\n    if (username) return __jsx(\"button\", {\n      onClick: function onClick() {\n        return stateData.actions.logout();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, username);else return __jsx(\"button\", {\n      onClick: function onClick() {\n        return stateData.actions.login(getRandomString(5));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Login\");\n  });\n}\n\nexport default UserAvatar;\n\nfunction getRandomString(length) {\n  var text = \"\",\n      possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}","map":{"version":3,"sources":["C:/Users/Shahnawaz/Desktop/nextjs/next-env-git/components/user/UserAvatar.js"],"names":["UserContext","UserAvatar","stateData","username","state","actions","logout","login","getRandomString","length","text","possible","i","charAt","Math","floor","random"],"mappings":";;;AAAA,SAAQA,WAAR,QAA0B,0BAA1B;;AAEA,SAASC,UAAT,GAAsB;AAClB,SAAO,MAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC,UAAAC,SAAS,EAAI;AAAA,QACFC,QADE,GACUD,SAAS,CAACE,KADpB,CACFD,QADE;AAET,QAAIA,QAAJ,EACI,OACI;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMD,SAAS,CAACG,OAAV,CAAkBC,MAAlB,EAAN;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDH,QAApD,CADJ,CADJ,KAKI,OACI;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMD,SAAS,CAACG,OAAV,CAAkBE,KAAlB,CAAwBC,eAAe,CAAC,CAAD,CAAvC,CAAN;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAGP,GAZF,CAAP;AAeH;;AAED,eAAeP,UAAf;;AAEA,SAASO,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,MAAIC,IAAI,GAAG,EAAX;AAAA,MACIC,QAAQ,GAAG,gEADf;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B;AACIF,IAAAA,IAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACF,MAApC,CAAhB,CAAR;AADJ;;AAGA,SAAOC,IAAP;AACH","sourcesContent":["import {UserContext} from \"../contexts/user-context\";\r\n\r\nfunction UserAvatar() {\r\n    return <UserContext.Consumer>\r\n        {\r\n            stateData => {\r\n                const {username} = stateData.state;\r\n                if (username)\r\n                    return (\r\n                        <button onClick={() => stateData.actions.logout()}>{username}</button>\r\n                    )\r\n                else\r\n                    return (\r\n                        <button onClick={() => stateData.actions.login(getRandomString(5))}>Login</button>\r\n                    )\r\n            }\r\n        }\r\n    </UserContext.Consumer>\r\n}\r\n\r\nexport default UserAvatar;\r\n\r\nfunction getRandomString(length) {\r\n    let text = \"\",\r\n        possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (let i = 0; i < length; i++)\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n    return text;\r\n}"]},"metadata":{},"sourceType":"module"}