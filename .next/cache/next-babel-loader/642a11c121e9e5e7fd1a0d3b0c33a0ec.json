{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnawaz\\\\Desktop\\\\nextjs\\\\next-env-git\\\\pages\\\\posts\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Link from \"next/link\";\nimport NavBar from \"../../components/navbar/Navbar\";\n\nvar Posts = function Posts(_ref) {\n  var posts = _ref.posts;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), posts && posts.slice(0, 5).map(function (p) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/posts/[pid]\",\n      as: \"/posts/\" + p.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"ID: \", p.id)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"title: \", p.title));\n  }));\n};\n\nPosts.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, json;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/posts');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: json\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Posts;","map":{"version":3,"sources":["C:/Users/Shahnawaz/Desktop/nextjs/next-env-git/pages/posts/index.js"],"names":["fetch","Link","NavBar","Posts","posts","slice","map","p","id","title","getInitialProps","res","json"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACvB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGQA,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkBC,GAAlB,CAAsB,UAACC,CAAD;AAAA,WACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,EAAE,EAAE,YAAYA,CAAC,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQD,CAAC,CAACC,EAAV,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWD,CAAC,CAACE,KAAb,CAJJ,CADuB;AAAA,GAAtB,CAHjB,CADJ;AAgBH,CAjBD;;AAmBAN,KAAK,CAACO,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFV,KAAK,CAAC,4CAAD,CADH;;AAAA;AACdW,UAAAA,GADc;AAAA;AAAA,iBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBA,UAAAA,IAFgB;AAAA,2CAIb;AAAER,YAAAA,KAAK,EAAEQ;AAAT,WAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAOA,eAAeT,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nimport Link from \"next/link\";\r\nimport NavBar from \"../../components/navbar/Navbar\";\r\n\r\nconst Posts = ({posts}) => {\r\n    return(\r\n        <div>\r\n            <NavBar/>\r\n            {\r\n                posts && posts.slice(0, 5).map((p) => (\r\n                        <div>\r\n                            <Link href=\"/posts/[pid]\" as={\"/posts/\" + p.id} >\r\n                                <a>ID: {p.id}</a>\r\n                            </Link>\r\n                            <p>title: {p.title}</p>\r\n                        </div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nPosts.getInitialProps = async () => {\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts'),\r\n        json = await res.json();\r\n\r\n    return { posts: json }\r\n}\r\n\r\nexport default Posts"]},"metadata":{},"sourceType":"module"}