{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahnawaz\\\\Desktop\\\\nextjs\\\\next-env-git\\\\pages\\\\posts\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Link from \"next/link\";\nimport NavBar from \"../../components/navbar/Navbar\";\n\nconst Posts = ({\n  posts\n}) => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), posts && posts.slice(0, 5).map(p => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/posts/[pid]\",\n    as: \"/posts/\" + p.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"ID: \", p.id)), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"title: \", p.title))));\n};\n\nPosts.getInitialProps = async () => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts'),\n        json = await res.json();\n  return {\n    posts: json\n  };\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/Shahnawaz/Desktop/nextjs/next-env-git/pages/posts/index.js"],"names":["fetch","Link","NavBar","Posts","posts","slice","map","p","id","title","getInitialProps","res","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACvB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGQA,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkBC,GAAlB,CAAuBC,CAAD,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAE,YAAYA,CAAC,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQD,CAAC,CAACC,EAAV,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWD,CAAC,CAACE,KAAb,CAJJ,CADC,CAHjB,CADJ;AAgBH,CAjBD;;AAmBAN,KAAK,CAACO,eAAN,GAAwB,YAAY;AAChC,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC,4CAAD,CAAvB;AAAA,QACIY,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EADjB;AAGA,SAAO;AAAER,IAAAA,KAAK,EAAEQ;AAAT,GAAP;AACH,CALD;;AAOA,eAAeT,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nimport Link from \"next/link\";\r\nimport NavBar from \"../../components/navbar/Navbar\";\r\n\r\nconst Posts = ({posts}) => {\r\n    return(\r\n        <div>\r\n            <NavBar/>\r\n            {\r\n                posts && posts.slice(0, 5).map((p) => (\r\n                        <div>\r\n                            <Link href=\"/posts/[pid]\" as={\"/posts/\" + p.id} >\r\n                                <a>ID: {p.id}</a>\r\n                            </Link>\r\n                            <p>title: {p.title}</p>\r\n                        </div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nPosts.getInitialProps = async () => {\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts'),\r\n        json = await res.json();\r\n\r\n    return { posts: json }\r\n}\r\n\r\nexport default Posts"]},"metadata":{},"sourceType":"module"}